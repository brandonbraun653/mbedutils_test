/*
 * This file has been auto-generated by CppUMockGen v0.6.
 *
 * Contents will NOT be preserved if it is regenerated!!!
 *
 * Generation options: -s c++20
 */

#include <CppUMockGen.hpp>

#include "../../mbedutils/include/mbedutils/interfaces/cmn_intf.hpp"

#include <CppUTestExt/MockSupport.h>

namespace expect { namespace mb$ { namespace hw$ {
MockExpectedCall& max_drivers(CppUMockGen::Parameter<const mb::hw::Driver> driver, size_t __return__);
MockExpectedCall& max_drivers(unsigned int __numCalls__, CppUMockGen::Parameter<const mb::hw::Driver> driver, size_t __return__);
} } }

namespace expect { namespace mb$ { namespace hw$ {
MockExpectedCall& max_driver_index(CppUMockGen::Parameter<const mb::hw::Driver> driver, size_t __return__);
MockExpectedCall& max_driver_index(unsigned int __numCalls__, CppUMockGen::Parameter<const mb::hw::Driver> driver, size_t __return__);
} } }

namespace expect { namespace mb$ { namespace hw$ {
MockExpectedCall& is_driver_available(CppUMockGen::Parameter<const mb::hw::Driver> driver, CppUMockGen::Parameter<const size_t> channel, bool __return__);
MockExpectedCall& is_driver_available(unsigned int __numCalls__, CppUMockGen::Parameter<const mb::hw::Driver> driver, CppUMockGen::Parameter<const size_t> channel, bool __return__);
} } }

