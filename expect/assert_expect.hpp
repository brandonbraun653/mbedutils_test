/*
 * This file has been auto-generated by CppUMockGen v0.6.
 *
 * Contents will NOT be preserved if it is regenerated!!!
 *
 * Generation options: -s c++20
 */

#include <CppUMockGen.hpp>

#include "../../mbedutils/include/mbedutils/assert.hpp"

#include <CppUTestExt/MockSupport.h>

namespace expect { namespace mb$ { namespace assert$ {
MockExpectedCall& initialize();
MockExpectedCall& initialize(unsigned int __numCalls__);
} } }

namespace expect { namespace mb$ { namespace assert$ {
MockExpectedCall& num_recurse_events(size_t __return__);
MockExpectedCall& num_recurse_events(unsigned int __numCalls__, size_t __return__);
} } }

namespace expect { namespace mb$ { namespace assert$ {
MockExpectedCall& log_assert_failure(CppUMockGen::Parameter<const bool> predicate, CppUMockGen::Parameter<const bool> halt, CppUMockGen::Parameter<const char *const> file, CppUMockGen::Parameter<const int> line, bool __return__);
MockExpectedCall& log_assert_failure(unsigned int __numCalls__, CppUMockGen::Parameter<const bool> predicate, CppUMockGen::Parameter<const bool> halt, CppUMockGen::Parameter<const char *const> file, CppUMockGen::Parameter<const int> line, bool __return__);
} } }

namespace expect { namespace mb$ { namespace assert$ {
MockExpectedCall& format_and_log_assert_failure(CppUMockGen::Parameter<const bool> predicate, CppUMockGen::Parameter<const bool> halt, CppUMockGen::Parameter<const char *const> file, CppUMockGen::Parameter<const int> line, CppUMockGen::Parameter<const char *> fmt, bool __return__);
MockExpectedCall& format_and_log_assert_failure(unsigned int __numCalls__, CppUMockGen::Parameter<const bool> predicate, CppUMockGen::Parameter<const bool> halt, CppUMockGen::Parameter<const char *const> file, CppUMockGen::Parameter<const int> line, CppUMockGen::Parameter<const char *> fmt, bool __return__);
} } }

