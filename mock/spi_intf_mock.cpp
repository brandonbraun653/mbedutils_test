/*
 * This file has been auto-generated by CppUMockGen v0.6.
 *
 * Contents will NOT be preserved if it is regenerated!!!
 *
 * Generation options: -s c++20
 */

#include "../../mbedutils/include/mbedutils/interfaces/spi_intf.hpp"

#include <CppUTestExt/MockSupport.h>

void mb::hw::spi::intf::init(const mb::hw::spi::SpiConfig & config)
{
    mock().actualCall("mb::hw::spi::intf::init").withParameterOfType("mb::hw::spi::SpiConfig", "config", &config);
}

void mb::hw::spi::intf::deinit(const mb::hw::spi::Port_t port)
{
    mock().actualCall("mb::hw::spi::intf::deinit").withUnsignedIntParameter("port", port);
}

int mb::hw::spi::intf::write(const mb::hw::spi::Port_t port, const void * data, const size_t length)
{
    return mock().actualCall("mb::hw::spi::intf::write").withUnsignedIntParameter("port", port).withConstPointerParameter("data", data).withUnsignedLongIntParameter("length", length).returnLongIntValue();
}

int mb::hw::spi::intf::read(const mb::hw::spi::Port_t port, void * data, const size_t length)
{
    return mock().actualCall("mb::hw::spi::intf::read").withUnsignedIntParameter("port", port).withPointerParameter("data", data).withUnsignedLongIntParameter("length", length).returnLongIntValue();
}

int mb::hw::spi::intf::transfer(const mb::hw::spi::Port_t port, const void * tx, void * rx, const size_t length)
{
    return mock().actualCall("mb::hw::spi::intf::transfer")
        .withUnsignedIntParameter("port", port)
        .withConstPointerParameter("tx", tx)
        .withOutputParameter("rx", rx)
        .withUnsignedLongIntParameter("length", length).returnLongIntValue();
}

void mb::hw::spi::intf::lock(const mb::hw::spi::Port_t port)
{
    mock().actualCall("mb::hw::spi::intf::lock").withUnsignedIntParameter("port", port);
}

void mb::hw::spi::intf::unlock(const mb::hw::spi::Port_t port)
{
    mock().actualCall("mb::hw::spi::intf::unlock").withUnsignedIntParameter("port", port);
}

