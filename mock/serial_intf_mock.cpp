/*
 * This file has been auto-generated by CppUMockGen v0.6.
 *
 * Contents will NOT be preserved if it is regenerated!!!
 *
 * Generation options: -s c++20
 */

#include "../../mbedutils/include/mbedutils/interfaces/serial_intf.hpp"

#include <CppUTestExt/MockSupport.h>

bool mb::hw::serial::intf::lock(const size_t channel, const size_t timeout)
{
    return mock().actualCall("mb::hw::serial::intf::lock").withUnsignedLongIntParameter("channel", channel).withUnsignedLongIntParameter("timeout", timeout).returnBoolValue();
}

void mb::hw::serial::intf::unlock(const size_t channel)
{
    mock().actualCall("mb::hw::serial::intf::unlock").withUnsignedLongIntParameter("channel", channel);
}

void mb::hw::serial::intf::flush(const size_t channel)
{
    mock().actualCall("mb::hw::serial::intf::flush").withUnsignedLongIntParameter("channel", channel);
}

void mb::hw::serial::intf::disable_interrupts(const size_t channel)
{
    mock().actualCall("mb::hw::serial::intf::disable_interrupts").withUnsignedLongIntParameter("channel", channel);
}

void mb::hw::serial::intf::enable_interrupts(const size_t channel)
{
    mock().actualCall("mb::hw::serial::intf::enable_interrupts").withUnsignedLongIntParameter("channel", channel);
}

int mb::hw::serial::intf::write_async(const size_t channel, const void * data, const size_t length)
{
    return mock().actualCall("mb::hw::serial::intf::write_async").withUnsignedLongIntParameter("channel", channel).withConstPointerParameter("data", data).withUnsignedLongIntParameter("length", length).returnIntValue();
}

void mb::hw::serial::intf::on_tx_complete(const size_t channel, mb::hw::serial::intf::TXCompleteCallback callback)
{
    mock().actualCall("mb::hw::serial::intf::on_tx_complete").withUnsignedLongIntParameter("channel", channel).withParameterOfType("mb::hw::serial::intf::TXCompleteCallback", "callback", &callback);
}

void mb::hw::serial::intf::write_abort(const size_t channel)
{
    mock().actualCall("mb::hw::serial::intf::write_abort").withUnsignedLongIntParameter("channel", channel);
}

int mb::hw::serial::intf::read_async(const size_t channel, void * data, const size_t length, const size_t timeout)
{
    return mock().actualCall("mb::hw::serial::intf::read_async").withUnsignedLongIntParameter("channel", channel).withPointerParameter("data", data).withUnsignedLongIntParameter("length", length).withUnsignedLongIntParameter("timeout", timeout).returnIntValue();
}

void mb::hw::serial::intf::on_rx_complete(const size_t channel, mb::hw::serial::intf::RXCompleteCallback callback)
{
    mock().actualCall("mb::hw::serial::intf::on_rx_complete").withUnsignedLongIntParameter("channel", channel).withParameterOfType("mb::hw::serial::intf::RXCompleteCallback", "callback", &callback);
}

void mb::hw::serial::intf::read_abort(const size_t channel)
{
    mock().actualCall("mb::hw::serial::intf::read_abort").withUnsignedLongIntParameter("channel", channel);
}

